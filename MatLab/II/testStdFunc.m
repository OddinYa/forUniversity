clear;

%Задаем узлы интерполяции и значения функции в этих точках
x = [1.2, 1.5, 1.7, 2, 2.4, 2.6, 3.1, 3.3, 3.5, 3.9];
y = [8.278, 8.547, 8.815, 9.087, 9.354, 9.625, 9.897, 10.166, 10.436, 10.707];

% точки, в которых нужно вычислить значения интерполированной функции
xi = [1.25 3.55];

% вычисляем значения интерполированной функции с помощью стандартной функции interp1
yi = interp1(x, y, xi,'spline');

% Форматируем строки для заголовков столбцов
    x_header = sprintf('%-10s','  x');
    y_header = sprintf('%-10s', '       y');

    % Форматируем строки для данных таблицы
    data = '';
    for i = 1:length(x)
        data = [data sprintf('%-10.4f %-10.4f\n', x(i), y(i))];
    end
    
    % Выводим таблицу с входными данными
    fprintf('\nИсходная таблично заданная функция: \n');
    disp([x_header y_header]);
    disp([repmat('-', 1, 30)]);
    disp(data);
    
    % Выводим таблицу с результатами
    fprintf('\nТаблица результатов:\n');
    disp([x_header y_header]);
    disp([repmat('-', 1, 30)]);
    disp([xi', yi']);
    
    newXi = xi; % Сохраняем массив xi в новую переменную newXi
    newYi = yi; % Сохраняем массив interpY в новую переменную newYi
    
    % Строим график
    
    xi = min(x):1/(length(x)*2):max(x);  % Генерируем новый массив xi для более плавного графика
    [interpY] = interp1(x, y, xi,'spline'); % Интерполируем функцию для новых значений xi
    
   
    figure; % создаем новое окно графика
    plot(x, y, 'o', xi, interpY, '-',newXi,newYi,'X','LineWidth',3);% Строим график
    xlabel('Значение аргумента'); % Добавляем подпись для оси x
    ylabel('Знаечение функции'); % Добавляем подпись для оси y
    title('График интерполированной функции'); % Добавляем заголовок графика
