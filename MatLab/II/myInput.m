function [inX, inY, findPoint] = myInput()
% Функция для ввода данных пользователем и возврата их в виде трех массивов: inX, inY и findPoint
% inX и inY хранят введенные пользователем значения координат точек
% findPoint хранит значения xi, для которых нужно рассчитать соответствующие значения yi
%
% Возвращает:
% inX: массив, содержащий введенные пользователем значения x координат точек
% inY: массив, содержащий введенные пользователем значения y координат точек
% findPoint: массив, содержащий введенные пользователем значения xi, для которых нужно рассчитать yi

clc; % Очистка command window

inX = []; % Инициализируем переменную inX
inY = []; % Инициализируем переменную inY
findPoint = []; % Инициализируем переменную findPoint

x = [];% Инициализируем переменную x
y = []; % Инициализируем переменную y

count = 0; % счетчик количества точек x,y, добавленных пользователем

% Цикл для ввода пользователем точек x и y
while true
    count = count + 1;
   try
        x = input('Введите число x, для выхода введите "END": ','s'); % Запрос ввода x
       
        if strcmp(x, 'END') == 1 % Если пользователь ввел "END", завершаем цикл
            break;
         end    
        
        y = input('Введите число y: ','s'); % Запрос ввода y
    
        % Конвертируем входные данные в числа и сохраняем их в векторах
        inX(count) = str2num(x);
        inY(count) = str2num(y);
        
    catch % Обработка ошибок
        if length(inX)~=length(inY)
             count = count - 1;
        end
        disp(['Ошибка ввода. Не удалось преобразовать x = ', x, ' или y = ', y, ' в число.']);
        disp('Ошибка ввода. Попробуйте еще раз.'); % Выводим сообщение об ошибке
    end
end

count = 0;

xi = []; % Инициализируем переменную xi

% Цикл для ввода пользователем точек xi для поиска соответствующего им y
while true
    count = count + 1;
    try
       
        xi =  input('Введите число xi, для выхода введите "END": ','s'); % Запрос ввода xi
        
        if strcmp(xi, 'END') == 1 % Если пользователь ввел "END", завершаем цикл
            break;
        end    
         
        findPoint(count) = str2num(xi); % Конвертируем входные данные в числа и сохраняем их в векторе
        
     catch % Обработка ошибок
        count = count - 1;
       disp('Ошибка ввода. Попробуйте еще раз.'); % Выводим сообщение об ошибке
    end

end

end
