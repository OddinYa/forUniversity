function [yi] = interpolation(x, y, xi)
% Функция интерполяции по формулам Лагранжа
% x: узлы интерполяции
% y: значения функции в узлах интерполяции
% xi: точки, в которых нужно вычислить значения интерполированной функции

n = length(x); % количество узлов интерполяции
m = length(xi); % количество точек, в которых нужно вычислить значения интерполированной функции

% Проверка размерностей входных данных
if n ~= length(y)
    error('Входные данные должны быть одинаковой длины')
end

% Проверка наличия уникальных элементов в x
if length(unique(x)) ~= n
    error('Узлы интерполяции должны быть уникальными')
end


 
% Инициализация массива значений интерполированной функции
 yi = zeros(1, m);


% Цикл по всем точкам xi
for k = 1:m
    % Инициализация базисных полиномов Лагранжа
    li = ones(1,n);
   
    % Цикл по всем узлам интерполяции
    for i = 1:n
        % Цикл по всем узлам интерполяции кроме i-го
        for j = 1:n
          if i ~= j
              % Вычисление i-го базисного полинома Лагранжа
             li(i) = li(i) .* (xi(k) - x(j)) / (x(i) - x(j));
          end
        end
    end

    
    % Вычисление значения интерполированной функции в точке xi(k)
   sum = 0;
    for i = 1:n
      sum = sum + y(i) * li(i);
    end
    yi(1,k) = sum;
    
end
% Возвращаем векторы yi
end